# import Resume from "resume.graphql"

enum UserType {
    TYPE_NORMAL # 平民百姓
    TYPE_MASTER # 管理员
    TYPE_SUPERMAN # 超人
    TYPE_AGENT # 代理商
}

# User的基础模型
type User {
    id: ID!
    name: String!
    type: UserType!
    isFF: Boolean
    resume: Resume
}

# User 查询时可加入的条件
input userFilter {
    id: ID
    name: String
    # 这一步不会去真正完全filter(这个字段不是每个用户都有,所以没有此字段的时候就默认当成不是付费用户了)
    isFF: Boolean
    # hasResume没有真正对应的字段 (简历不是每个人都有的)
    hasResume: Boolean
    type: UserType
}

# User相关查询的的方法
type Query {
    findUsers(filter: userFilter): [User!]!
}

# 针对此User的相关操作
type Mutation {
    user(id: String): UserOps
}
